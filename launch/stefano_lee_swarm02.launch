<?xml version="1.0"?>
<launch>
  <!-- Enables the Internal Model Controller disabling the Mellinger and the Position ones -->
  <arg name="enable_internal_model_controller" default="true"/>
  <arg name="world_name" default="basic"/>
  <arg name="enable_logging" default="false"/>
  <arg name="enable_ground_truth" default="true"/>
  <arg name="mav_name" default="crazyflie2" />
  <arg name="enable_state_estimator" default="false"/>
  <arg name="enable_mellinger_controller" default="false"/>

  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find rotors_gazebo)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find rotors_gazebo)/models"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name)_crazyflie.world"/>
    <!-- <arg name="debug" value="true"/> -->
    <arg name="paused" value="false"/>
    <!-- <arg name="gui" value="false"/> -->
  </include>

 <group ns="$(arg mav_name)_1">
  <!-- CRAZYFLIE_1 -->
    <include file="$(find rotors_gazebo)/launch/spawn_mav_crazyflie.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="namespace" value="$(arg mav_name)_1" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg mav_name)_1"/>
      <!-- Set the initial position -->
      <arg name="x" value="0.0"/>
      <arg name="y" value="0.0"/>
    </include>
   <node name="lee_control_alpha" pkg="lee_controller" type="lee_control_alpha" output="screen">
      </node>
   <node name="swarm_lee_linear1_1" pkg="trajectory_nodes" type="swarm_lee_linear1_1" output="screen" >
   </node>
   <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
   <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>

  <!-- CRAZYFLIE_2 -->
  <group ns="$(arg mav_name)_2">
    <include file="$(find rotors_gazebo)/launch/spawn_mav_crazyflie.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="namespace" value="$(arg mav_name)_2" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg mav_name)_2"/>
      <!-- Set the initial position -->
      <arg name="x" value="1.0"/>
      <arg name="y" value="0.0"/>
    </include>
   <!-- The Crazyflie position controller -->
   <node name="lee_control_alpha" pkg="lee_controller" type="lee_control_alpha" output="screen">
      </node>
   <node name="swarm_lee_semicirc" pkg="trajectory_nodes" type="swarm_lee_semicirc" output="screen" >
   </node>
   <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
   <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>

<!-- CRAZYFLIE_3 -->
  <group ns="$(arg mav_name)_3">
    <include file="$(find rotors_gazebo)/launch/spawn_mav_crazyflie.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="namespace" value="$(arg mav_name)_3" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="log_file" value="$(arg mav_name)_3"/>
      <!-- Set the initial position -->
      <arg name="x" value="1.0"/>
      <arg name="y" value="-1.0"/>
    </include>
   <!-- The Crazyflie position controller -->
   <node name="lee_control_alpha" pkg="lee_controller" type="lee_control_alpha" output="screen">
      </node>
   <node name="swarm_lee_linear1_0" pkg="trajectory_nodes" type="swarm_lee_linear1_0" output="screen" >
   </node>
   <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
   <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  </group>

</launch>
